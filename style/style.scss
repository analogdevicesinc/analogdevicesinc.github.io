@use "variable";

/* We could populate the sidebar with other stuff,
 * for now, let's just hide and adjust the margins. */

#left,
#right #show-repotoc,
#right #show-localtoc,
.sphinxsidebarwrapper,
.localtoc {
    display: none !important;
}

header #logo {
    padding-left: 1rem;
    margin-left: 0;
}

@media (min-width: variable.$screen-1) and (max-width: variable.$screen-3) {
    .bodywrapper {
        width: calc(90vw);
        margin-left: calc(50vw - 45vw);
    }

    header #right {
        width: calc(90vw);
        margin-left: calc(50vw - 45vw);
    }
}

@media (max-width: variable.$screen-1) {
    header #right {
        margin-left: 1rem;
    }
}

.cards {
    .entry {
      background: var(--bg-color3);

      & > span {
        height: 100%;
        display: block;
        transition: margin ease .125s, box-shadow ease .125s;
        border-radius: variable.$border-radius;
        border: 1px solid rgba(125,125,125,.8);
        padding: 1em;
      }

      &:hover > span {
        box-shadow: 0 .2rem .5rem rgba(0,0,0,.1), 0 0 .0625rem rgba(0,0,0,.2);
        margin: -.25em 0 .25em 0;
      }
      &:active > span {
        margin: 0;
        box-shadow: none;
      }
      .title {
          color: var(--accent-color);
          font-size: 1.25em;
          padding-bottom: .5em;
      }
      .subtitle {
          color: var(--text-color3);
      }
      hr {
        width: 100%;
        border-top: 1px solid var(--text-color3);
      }
    }
}

.collection-category {
    color: var(--text-color2);
    text-transform: uppercase;
    font-weight: bold;
    margin-bottom: -1.25em;
    margin-top: 1.25em;
    display: block;
}

.cards.collection {
    .img-container {
        background: #fff;
        margin: -1em -1em .5em -1em;
        border-radius: variable.$border-radius;

        img {
          object-fit: cover;
          margin: 0 auto;
          max-width: 20em;
          max-height: 25em;
          width: 80%;
        }
      }
    .entry > span {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
}

.cards.grid {
    display: grid;
    column-gap: 1em;
    row-gap: 1em;
}

@media (min-width: variable.$screen-2) {
    .cards.grid {
        grid-template-columns: 1fr 1fr 1fr;
    }
}

@media (min-width: variable.$screen-0) and (max-width: variable.$screen-2) {
    .cards.grid {
        grid-template-columns: 1fr 1fr;
    }
}

